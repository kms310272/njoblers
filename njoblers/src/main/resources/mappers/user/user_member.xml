<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kingdom.njoblers.user.member.repository.UserMemberMapper">

    <select id="findByEmailAndPassword" parameterType="hashmap" resultType="map">
        SELECT 
        	* 
    	FROM 
    		member
        WHERE 
        	email = #{email} 
    	AND pw = #{pw}
    </select>
    
    
    <select id="countByEmail" parameterType="hashmap" resultType="int">
    	SELECT 
    		COUNT(*) 
		FROM 
			member 
		WHERE 
			email = #{email}
    </select>
    
    <insert id="insertMember" parameterType="hashmap">
		INSERT INTO 
			member(
				email, 
				pw, 
				user_name, 
				email_verified, 
				status_code, 
				member_type, 
				reg_date, 
				reg_id, 
				upd_date, 
				upd_id
			)
			VALUES(
				#{email}, 
				#{pw}, 
				#{user_name}, 
				'N', 
				'1', 
				'U', 
				NOW(3), 
				NULL, 
				NULL, 
				NULL
			);
	</insert>
	
	<select id="findById" parameterType="hashmap" resultType="map">
        SELECT 
        	* 
    	FROM 
    		member
        WHERE 
        	member_sn = #{member_sn} 
    	AND pw = #{pw}
    </select>
    
    <update id="updateMember" parameterType="hashmap">
		UPDATE 
			member		
		SET 
		<if test='pw !="" and pw !=null'>
			pw= #{pw},
		</if>
		user_name= #{user_name}, 
		upd_date= NOW(3), 
		upd_id= #{upd_id}
		WHERE member_sn= #{member_sn}
	</update>
	
	<insert id="insertMemberHistory" parameterType="hashmap">
		INSERT INTO 
			member_history (
				member_sn, 
				email, 
				pw, 
				user_name, 
				email_verified, 
				status_code, 
				reg_date, 
				reg_id
			)
		SELECT 
			member_sn, 
			email, 
			pw, 
			user_name, 
			email_verified, 
			status_code, 
			reg_date, 
			reg_id
		FROM 
			member
		WHERE member_sn = #{member_sn};
	</insert>
	
	<update id="updateMemberStatus" parameterType="hashmap">
    	UPDATE member
	    SET status_code = 
	    <choose>
			<when test='ninety_days_ago !=null and ninety_days_ago != ""'>
				CASE 
	           		WHEN last_activity_date <![CDATA[<]]> #{ninety_days_ago} THEN 2
	            	ELSE status_code
	            	END
	        </when>
	        <otherwise>#{status_code}</otherwise>
		</choose>
	    WHERE member_sn = #{memberSn}
	</update>	
	
	<select id="getStatusById" parameterType="hashmap" resultType="int">
        SELECT 
        	status_code 
    	FROM 
    		member
        WHERE 
        	member_sn = #{member_sn} 
    </select>
</mapper>
